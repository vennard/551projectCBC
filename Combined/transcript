# //  ModelSim SE 10.0c_1 Aug 26 2011 Linux 2.6.42-0.bpo.4-amd64
# //
# //  Copyright 1991-2011 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //
# Loading project 551Project
#  
# Compile of accel_mstr.v was successful with warnings.
# Compile of accel_UART.v was successful.
# Compile of bit14_reg.v was successful.
# Compile of bit14_reg_clr.v was successful.
# Compile of bit14_reg_rst.v was successful.
# Compile of cbc_dig.v was successful.
# Compile of cbc_dig_tb.v was successful.
# Compile of cfg_mstr.v was successful.
# Compile of cfg_UART.v was successful.
# Compile of control.v was successful.
# Compile of datapathcontrol.v was successful.
# Compile of dc_datapath.v was successful.
# Compile of dig_core.v was successful.
# Compile of eep.v was successful with warnings.
# Compile of PWM.v was successful.
# Compile of pwm_monitor.v was successful.
# Compile of saturator.v was successful.
# Compile of UART.v was successful.
# Compile of UART_tx.v was successful.
# Compile of UART_rx.v was successful.
# 20 compiles, 0 failed with no errors. 
# Compile of accel_mstr.v was successful.
# Compile of accel_UART.v was successful.
# Compile of bit14_reg.v was successful.
# Compile of bit14_reg_clr.v was successful.
vsim -novopt work.cbc_dig_tb
# vsim -novopt work.cbc_dig_tb 
# ** Warning: (vsim-6) -- Waiting for lock by "vennard@tux-54, pid = 15771". Lockfile is "/filespace/people/v/vennard/551projectCBC/Combined/work/_lock".
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig
# Loading work.cbc_dig
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.dig_core
# Loading work.dig_core
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.control
# Loading work.control
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.dc_datapath
# Loading work.dc_datapath
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.bit14_reg
# Loading work.bit14_reg
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.bit14_reg_clr
# Loading work.bit14_reg_clr
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.bit14_reg_rst
# Loading work.bit14_reg_rst
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.saturator
# Loading work.saturator
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cfg_UART
# Loading work.cfg_UART
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.UART
# Loading work.UART
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.UART_tx
# Loading work.UART_tx
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.UART_rx
# Loading work.UART_rx
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.accel_UART
# Loading work.accel_UART
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.PWM
# Loading work.PWM
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.eep
# Loading work.eep
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cfg_mstr
# Loading work.cfg_mstr
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.accel_mstr
# Loading work.accel_mstr
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.pwm_monitor
# Loading work.pwm_monitor
# Compile of bit14_reg_rst.v was successful.
# Compile of cbc_dig.v was successful.
# Compile of cbc_dig_tb.v was successful.
# Compile of cfg_mstr.v was successful.
# Compile of cfg_UART.v was successful.
# Compile of control.v was successful.
# Compile of datapathcontrol.v was successful.
# Compile of dc_datapath.v was successful.
# Compile of dig_core.v was successful.
# Compile of eep.v was successful with warnings.
# Compile of PWM.v was successful.
# Compile of pwm_monitor.v was successful.
# Compile of saturator.v was successful.
# Compile of UART.v was successful.
# Compile of UART_tx.v was successful.
# Compile of UART_rx.v was successful.
# 20 compiles, 0 failed with no errors. 
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
# ERROR - dst = xxx00 -- should be =x3fcd
# ERROR - dst = xxx00 -- should be =x3f5d
# ERROR - dst = xxx00 -- should be =x3df0
# ERROR - dst = xxx00 -- should be =x0017
# ERROR - dst = xxx00 -- should be =x044d
# ERROR - dst = xxx00 -- should be =x3111
# ERROR - dst = xxx00 -- should be =x3f45
# ERROR - dst = xxx00 -- should be =x001e
# ERROR - dst = xxx00 -- should be =x3ea8
# ERROR - dst = xxx00 -- should be =x176e
# ERROR - dst = xxx00 -- should be =x3f77
# ERROR - dst = xxx00 -- should be =x0c3c
# ERROR - dst = xxx00 -- should be =x3e77
# ERROR - dst = xxx00 -- should be =x0441
# ERROR - dst = xxx00 -- should be =x3f6d
# ERROR - dst = xxx00 -- should be =x3146
# ERROR - dst = xxx00 -- should be =x200b
# ERROR - dst = xxx00 -- should be =x3db6
# ERROR - dst = xxx00 -- should be =x0c4a
# ERROR - dst = xxx00 -- should be =x0354
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# reseting...
# Advanced test starting...
# Advanced test -- setting xset to be = x0c3ff5
# Sending new xset value...
# Checking duty values against new xset value...
# Basic test running...
# ERROR - dst = x3ff5 -- should be =x0000
# ERROR - dst = x3ff5 -- should be =x0077
# ERROR - dst = x3ff5 -- should be =x0007
# ERROR - dst = x3ff5 -- should be =x3e9b
# ERROR - dst = x3ff5 -- should be =x00c2
# ERROR - dst = x3ff5 -- should be =x04f9
# ERROR - dst = x3ff5 -- should be =x31bf
# ERROR - dst = x3ff5 -- should be =x3ff2
# ERROR - dst = x3ff5 -- should be =x00cb
# ERROR - dst = x3ff5 -- should be =x3f57
# reseting...
# Advanced test #2 -- setting xset to be = x0c0444
# Sending new xset value...
# Checking duty values against #2 xset value
# Basic test running...
# ERROR - dst = x0444 -- should be =x399a
# ERROR - dst = x0444 -- should be =x39f6
# ERROR - dst = x0444 -- should be =x3982
# ERROR - dst = x0444 -- should be =x3812
# ERROR - dst = x0444 -- should be =x3a34
# ERROR - dst = x0444 -- should be =x3e65
# ERROR - dst = x0444 -- should be =x2b2b
# ERROR - dst = x0444 -- should be =x395f
# ERROR - dst = x0444 -- should be =x3a38
# ERROR - dst = x0444 -- should be =x38c3
# SUCCESS! Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 422
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig
# Loading work.cbc_dig
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.dig_core
# Loading work.dig_core
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.control
# Loading work.control
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.dc_datapath
# Loading work.dc_datapath
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.saturator
# Loading work.saturator
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cfg_UART
# Loading work.cfg_UART
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.UART
# Loading work.UART
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.UART_tx
# Loading work.UART_tx
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.UART_rx
# Loading work.UART_rx
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.PWM
# Loading work.PWM
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.eep
# Loading work.eep
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cfg_mstr
# Loading work.cfg_mstr
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.pwm_monitor
# Loading work.pwm_monitor
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
# ERROR - dstActual = x1 -- should be =x3fcd
# ERROR - dstActual = x1 -- should be =x3f5d
# ERROR - dstActual = x0 -- should be =x3df0
# ERROR - dstActual = x1 -- should be =x0017
# ERROR - dstActual = x1 -- should be =x044d
# ERROR - dstActual = x1 -- should be =x3111
# ERROR - dstActual = x1 -- should be =x3f45
# ERROR - dstActual = x0 -- should be =x001e
# ERROR - dstActual = x0 -- should be =x3ea8
# ERROR - dstActual = x0 -- should be =x176e
# ERROR - dstActual = x1 -- should be =x3f77
# ERROR - dstActual = x0 -- should be =x0c3c
# ERROR - dstActual = x1 -- should be =x3e77
# ERROR - dstActual = x1 -- should be =x0441
# ERROR - dstActual = x1 -- should be =x3f6d
# ERROR - dstActual = x0 -- should be =x3146
# ERROR - dstActual = x1 -- should be =x200b
# ERROR - dstActual = x0 -- should be =x3db6
# ERROR - dstActual = x0 -- should be =x0c4a
# ERROR - dstActual = x0 -- should be =x0354
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# reseting...
# Advanced test starting...
# Advanced test -- setting xset to be = x0c3ff5
# Sending new xset value...
# Checking duty values against new xset value...
# Basic test running...
#          1 duty written correctly
# ERROR - dstActual = x1 -- should be =x0077
# ERROR - dstActual = x0 -- should be =x0007
# ERROR - dstActual = x0 -- should be =x3e9b
# ERROR - dstActual = x1 -- should be =x00c2
# ERROR - dstActual = x0 -- should be =x04f9
# ERROR - dstActual = x1 -- should be =x31bf
# ERROR - dstActual = x0 -- should be =x3ff2
# ERROR - dstActual = x0 -- should be =x00cb
# ERROR - dstActual = x0 -- should be =x3f57
# reseting...
# Advanced test #2 -- setting xset to be = x0c0444
# Sending new xset value...
# Checking duty values against #2 xset value
# Basic test running...
# ERROR - dstActual = x0 -- should be =x399a
# ERROR - dstActual = x1 -- should be =x39f6
# ERROR - dstActual = x0 -- should be =x3982
# ERROR - dstActual = x1 -- should be =x3812
# ERROR - dstActual = x0 -- should be =x3a34
# ERROR - dstActual = x1 -- should be =x3e65
# ERROR - dstActual = x1 -- should be =x2b2b
# ERROR - dstActual = x1 -- should be =x395f
# ERROR - dstActual = x0 -- should be =x3a38
# ERROR - dstActual = x1 -- should be =x38c3
# SUCCESS! Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 423
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
#          2 duty written correctly
#          3 duty written correctly
#          4 duty written correctly
#          5 duty written correctly
#          6 duty written correctly
#          7 duty written correctly
#          8 duty written correctly
#          9 duty written correctly
#         10 duty written correctly
#         11 duty written correctly
#         12 duty written correctly
#         13 duty written correctly
#         14 duty written correctly
#         15 duty written correctly
#         16 duty written correctly
#         17 duty written correctly
#         18 duty written correctly
#         19 duty written correctly
#         20 duty written correctly
#         21 duty written correctly
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# reseting...
# Advanced test starting...
# Advanced test -- setting xset to be = x0c3ff5
# Sending new xset value...
# Checking duty values against new xset value...
# Basic test running...
# ERROR - dstActual = x2e90 -- should be =x0000
# ERROR - dstActual = x0065 -- should be =x0077
# ERROR - dstActual = x3ffa -- should be =x0007
# ERROR - dstActual = x3e8e -- should be =x3e9b
# ERROR - dstActual = x00b5 -- should be =x00c2
# ERROR - dstActual = x04ec -- should be =x04f9
# ERROR - dstActual = x31b1 -- should be =x31bf
# ERROR - dstActual = x3fe4 -- should be =x3ff2
# ERROR - dstActual = x00be -- should be =x00cb
# ERROR - dstActual = x3f4a -- should be =x3f57
# reseting...
# Advanced test #2 -- setting xset to be = x0c0444
# Sending new xset value...
# Checking duty values against #2 xset value
# Basic test running...
# ERROR - dstActual = x2e90 -- should be =x399a
# ERROR - dstActual = x39eb -- should be =x39f6
# ERROR - dstActual = x397a -- should be =x3982
# ERROR - dstActual = x3809 -- should be =x3812
# ERROR - dstActual = x3a2c -- should be =x3a34
# ERROR - dstActual = x3e5d -- should be =x3e65
#          7 duty written correctly
#          8 duty written correctly
#          9 duty written correctly
#         10 duty written correctly
# SUCCESS! Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 423
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
# ERROR - dstActual = x0000 -- should be =x3fcd
# ERROR - dstActual = x0000 -- should be =x3f5d
# ERROR - dstActual = x0000 -- should be =x3df0
# ERROR - dstActual = x0000 -- should be =x0017
# ERROR - dstActual = x0000 -- should be =x044d
# ERROR - dstActual = x0000 -- should be =x3111
# ERROR - dstActual = x0000 -- should be =x3f45
# ERROR - dstActual = x0000 -- should be =x001e
# ERROR - dstActual = x0000 -- should be =x3ea8
# ERROR - dstActual = x0000 -- should be =x176e
# ERROR - dstActual = x0000 -- should be =x3f77
# ERROR - dstActual = x0000 -- should be =x0c3c
# ERROR - dstActual = x0000 -- should be =x3e77
# ERROR - dstActual = x0000 -- should be =x0441
# ERROR - dstActual = x0000 -- should be =x3f6d
# ERROR - dstActual = x0000 -- should be =x3146
# ERROR - dstActual = x0000 -- should be =x200b
# ERROR - dstActual = x0000 -- should be =x3db6
# ERROR - dstActual = x0000 -- should be =x0c4a
# ERROR - dstActual = x0000 -- should be =x0354
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# reseting...
# Advanced test starting...
# Advanced test -- setting xset to be = x0c3ff5
# Sending new xset value...
# Checking duty values against new xset value...
# Basic test running...
# ERROR - dstActual = x3466 -- should be =x0000
# ERROR - dstActual = x0000 -- should be =x0077
# ERROR - dstActual = x3400 -- should be =x0007
# ERROR - dstActual = x3a00 -- should be =x3e9b
# ERROR - dstActual = x0900 -- should be =x00c2
# ERROR - dstActual = x0480 -- should be =x04f9
# ERROR - dstActual = x3640 -- should be =x31bf
# ERROR - dstActual = x3b20 -- should be =x3ff2
# ERROR - dstActual = x0990 -- should be =x00cb
# ERROR - dstActual = x04c8 -- should be =x3f57
# reseting...
# Advanced test #2 -- setting xset to be = x0c0444
# Sending new xset value...
# Checking duty values against #2 xset value
# Basic test running...
# ERROR - dstActual = x3466 -- should be =x399a
# ERROR - dstActual = x0000 -- should be =x39f6
# ERROR - dstActual = x3400 -- should be =x3982
# ERROR - dstActual = x3a00 -- should be =x3812
# ERROR - dstActual = x0900 -- should be =x3a34
# ERROR - dstActual = x0480 -- should be =x3e65
# ERROR - dstActual = x3640 -- should be =x2b2b
# ERROR - dstActual = x3b20 -- should be =x395f
# ERROR - dstActual = x0990 -- should be =x3a38
# ERROR - dstActual = x04c8 -- should be =x38c3
# SUCCESS! Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 423
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
#          2 duty written correctly
#          3 duty written correctly
#          4 duty written correctly
#          5 duty written correctly
#          6 duty written correctly
#          7 duty written correctly
#          8 duty written correctly
#          9 duty written correctly
#         10 duty written correctly
#         11 duty written correctly
#         12 duty written correctly
#         13 duty written correctly
#         14 duty written correctly
#         15 duty written correctly
#         16 duty written correctly
#         17 duty written correctly
#         18 duty written correctly
#         19 duty written correctly
#         20 duty written correctly
#         21 duty written correctly
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# reseting...
# Advanced test starting...
# Advanced test -- setting xset to be = x0c3ff5
# Sending new xset value...
# Checking duty values against new xset value...
# Basic test running...
#          1 duty written correctly
# ERROR - dstActual = x000X -- should be =x0077
# ERROR - dstActual = x000X -- should be =x0007
# ERROR - dstActual = x000X -- should be =x3e9b
# ERROR - dstActual = x000X -- should be =x00c2
# ERROR - dstActual = x000X -- should be =x04f9
# ERROR - dstActual = x000X -- should be =x31bf
# ERROR - dstActual = x000X -- should be =x3ff2
# ERROR - dstActual = x000X -- should be =x00cb
# ERROR - dstActual = x000X -- should be =x3f57
# reseting...
# Advanced test #2 -- setting xset to be = x0c0444
# Sending new xset value...
# Checking duty values against #2 xset value
# Basic test running...
# ERROR - dstActual = x000X -- should be =x399a
# ERROR - dstActual = x000X -- should be =x39f6
# ERROR - dstActual = x000X -- should be =x3982
# ERROR - dstActual = x000X -- should be =x3812
# ERROR - dstActual = x000X -- should be =x3a34
# ERROR - dstActual = x000X -- should be =x3e65
# ERROR - dstActual = x000X -- should be =x2b2b
# ERROR - dstActual = x000X -- should be =x395f
# ERROR - dstActual = x000X -- should be =x3a38
# ERROR - dstActual = x000X -- should be =x38c3
# SUCCESS! Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 423
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
#          2 duty written correctly
#          3 duty written correctly
#          4 duty written correctly
#          5 duty written correctly
#          6 duty written correctly
#          7 duty written correctly
#          8 duty written correctly
#          9 duty written correctly
#         10 duty written correctly
#         11 duty written correctly
#         12 duty written correctly
#         13 duty written correctly
#         14 duty written correctly
#         15 duty written correctly
#         16 duty written correctly
#         17 duty written correctly
#         18 duty written correctly
#         19 duty written correctly
#         20 duty written correctly
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# reseting...
# Advanced test starting...
# Advanced test -- setting xset to be = x0c3ff5
# Sending new xset value...
# Checking duty values against new xset value...
# Basic test running...
#          1 duty written correctly
# ERROR - duty = x000X -- should be =x0077
# ERROR - duty = x000X -- should be =x0007
# ERROR - duty = x000X -- should be =x3e9b
# ERROR - duty = x000X -- should be =x00c2
# ERROR - duty = x000X -- should be =x04f9
# ERROR - duty = x000X -- should be =x31bf
# ERROR - duty = x000X -- should be =x3ff2
# ERROR - duty = x000X -- should be =x00cb
# ERROR - duty = x000X -- should be =x3f57
# reseting...
# Advanced test #2 -- setting xset to be = x0c0444
# Sending new xset value...
# Checking duty values against #2 xset value
# Basic test running...
# ERROR - duty = x000X -- should be =x399a
# ERROR - duty = x000X -- should be =x39f6
# ERROR - duty = x000X -- should be =x3982
# ERROR - duty = x000X -- should be =x3812
# ERROR - duty = x000X -- should be =x3a34
# ERROR - duty = x000X -- should be =x3e65
# ERROR - duty = x000X -- should be =x2b2b
# ERROR - duty = x000X -- should be =x395f
# ERROR - duty = x000X -- should be =x3a38
# ERROR - duty = x000X -- should be =x38c3
# SUCCESS! Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 423
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
# Compile of cbc_dig_tb.v was successful.
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
#          2 duty written correctly
#          3 duty written correctly
#          4 duty written correctly
#          5 duty written correctly
#          6 duty written correctly
#          7 duty written correctly
#          8 duty written correctly
#          9 duty written correctly
#         10 duty written correctly
#         11 duty written correctly
#         12 duty written correctly
#         13 duty written correctly
#         14 duty written correctly
#         15 duty written correctly
#         16 duty written correctly
#         17 duty written correctly
#         18 duty written correctly
#         19 duty written correctly
#         20 duty written correctly
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# reseting...
# Advanced test starting...
# Advanced test -- setting xset to be = x0c3ff5
# Sending new xset value...
# Checking duty values against new xset value...
# Basic test running...
#          1 duty written correctly
# ERROR - duty = x000X -- should be =x0077
# ERROR - duty = x000X -- should be =x0007
# ERROR - duty = x000X -- should be =x3e9b
# ERROR - duty = x000X -- should be =x00c2
# ERROR - duty = x000X -- should be =x04f9
# ERROR - duty = x000X -- should be =x31bf
# ERROR - duty = x000X -- should be =x3ff2
# ERROR - duty = x000X -- should be =x00cb
# ERROR - duty = x000X -- should be =x3f57
# reseting...
# Advanced test #2 -- setting xset to be = x0c0444
# Sending new xset value...
# Checking duty values against #2 xset value
# Basic test running...
# ERROR - duty = x000X -- should be =x399a
# ERROR - duty = x000X -- should be =x39f6
# ERROR - duty = x000X -- should be =x3982
# ERROR - duty = x000X -- should be =x3812
# ERROR - duty = x000X -- should be =x3a34
# ERROR - duty = x000X -- should be =x3e65
# ERROR - duty = xXXXX -- should be =x2b2b
# ERROR - duty = xXXXX -- should be =x395f
# ERROR - duty = xXXXX -- should be =x3a38
# ERROR - duty = xXXXX -- should be =x38c3
# SUCCESS! Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 415
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
#          2 duty written correctly
#          3 duty written correctly
#          4 duty written correctly
#          5 duty written correctly
#          6 duty written correctly
#          7 duty written correctly
#          8 duty written correctly
#          9 duty written correctly
#         10 duty written correctly
#         11 duty written correctly
#         12 duty written correctly
#         13 duty written correctly
#         14 duty written correctly
#         15 duty written correctly
#         16 duty written correctly
#         17 duty written correctly
#         18 duty written correctly
#         19 duty written correctly
#         20 duty written correctly
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# Advanced test starting...
# Advanced test -- setting xset to be = x0c3ff5
# Starting Xset testing
# Sending new xset value...
# Checking duty values against new xset value...
# Basic test running...
#          1 duty written correctly
# ERROR - duty = x000X -- should be =x0077
# ERROR - duty = x000X -- should be =x0007
# ERROR - duty = x000X -- should be =x3e9b
# ERROR - duty = x000X -- should be =x00c2
# ERROR - duty = x000X -- should be =x04f9
# ERROR - duty = x000X -- should be =x31bf
# ERROR - duty = x000X -- should be =x3ff2
# ERROR - duty = x000X -- should be =x00cb
# ERROR - duty = x000X -- should be =x3f57
# reseting...
# Advanced test #2 -- setting xset to be = x0c0444
# Starting Xset testing
# Sending new xset value...
# Checking duty values against #2 xset value
# Basic test running...
# ERROR - duty = x000X -- should be =x399a
# ERROR - duty = x000X -- should be =x39f6
# ERROR - duty = x000X -- should be =x3982
# ERROR - duty = x000X -- should be =x3812
# ERROR - duty = x000X -- should be =x3a34
# ERROR - duty = x000X -- should be =x3e65
# ERROR - duty = xXXXX -- should be =x2b2b
# ERROR - duty = xXXXX -- should be =x395f
# ERROR - duty = xXXXX -- should be =x3a38
# ERROR - duty = xXXXX -- should be =x38c3
# SUCCESS! Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 416
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
# ERROR - duty = x0000 -- should be =x3fcd
# ERROR - duty = x0000 -- should be =x3f5d
# ERROR - duty = x0000 -- should be =x3df0
# ERROR - duty = x0000 -- should be =x0017
# ERROR - duty = x0000 -- should be =x044d
# ERROR - duty = x0000 -- should be =x3111
# ERROR - duty = x0000 -- should be =x3f45
# ERROR - duty = x0000 -- should be =x001e
# ERROR - duty = x0000 -- should be =x3ea8
# ERROR - duty = x0000 -- should be =x176e
# ERROR - duty = x0000 -- should be =x3f77
# ERROR - duty = x0000 -- should be =x0c3c
# ERROR - duty = x0000 -- should be =x3e77
# ERROR - duty = x0000 -- should be =x0441
# ERROR - duty = x0000 -- should be =x3f6d
# ERROR - duty = x0000 -- should be =x3146
# ERROR - duty = x0000 -- should be =x200b
# ERROR - duty = x0000 -- should be =x3db6
# ERROR - duty = x0000 -- should be =x0c4a
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# Advanced test starting...
# Advanced test -- setting xset to be = x0c3ff5
# Starting Xset testing
# Sending new xset value...
# Checking duty values against new xset value...
# Basic test running...
# ERROR - duty = x3466 -- should be =x0000
# ERROR - duty = x0000 -- should be =x0077
# ERROR - duty = x3400 -- should be =x0007
# ERROR - duty = x3a00 -- should be =x3e9b
# ERROR - duty = x0900 -- should be =x00c2
# ERROR - duty = x0480 -- should be =x04f9
# ERROR - duty = x3640 -- should be =x31bf
# ERROR - duty = x3b20 -- should be =x3ff2
# ERROR - duty = x0990 -- should be =x00cb
# ERROR - duty = x04c8 -- should be =x3f57
# reseting...
# Advanced test #2 -- setting xset to be = x0c0444
# Starting Xset testing
# Sending new xset value...
# Checking duty values against #2 xset value
# Basic test running...
# ERROR - duty = x3532 -- should be =x399a
# ERROR - duty = x0699 -- should be =x39f6
# ERROR - duty = x374c -- should be =x3982
# ERROR - duty = x3ba6 -- should be =x3812
# ERROR - duty = x2e99 -- should be =x3a34
# ERROR - duty = x2e99 -- should be =x3e65
# ERROR - duty = x0000 -- should be =x2b2b
# ERROR - duty = x3466 -- should be =x395f
# ERROR - duty = x0000 -- should be =x3a38
# ERROR - duty = x3ff7 -- should be =x38c3
# SUCCESS! Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 417
# Compile of cbc_dig_tb.v failed with 1 errors.
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
run -all
# Initialization test running...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
#          2 duty written correctly
#          3 duty written correctly
#          4 duty written correctly
#          5 duty written correctly
#          6 duty written correctly
#          7 duty written correctly
#          8 duty written correctly
#          9 duty written correctly
#         10 duty written correctly
#         11 duty written correctly
#         12 duty written correctly
#         13 duty written correctly
#         14 duty written correctly
#         15 duty written correctly
#         16 duty written correctly
#         17 duty written correctly
#         18 duty written correctly
#         19 duty written correctly
#         20 duty written correctly
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode correctly
# Ending command operation tests...
# reseting...
# Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 419
# Compile of cbc_dig_tb.v failed with 1 errors.
# Compile of cbc_dig_tb.v failed with 1 errors.
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
run -all
# Initializing...
# Finishing Initialization...
# Basic test running...
#          1 duty written correctly
# ERROR - duty = x0000 -- should be =x3fcd
# ERROR - duty = x0000 -- should be =x3f5d
# ERROR - duty = x0000 -- should be =x3df0
# ERROR - duty = x0000 -- should be =x0017
# ERROR - duty = x0000 -- should be =x044d
# ERROR - duty = x0000 -- should be =x3111
# ERROR - duty = x0000 -- should be =x3f45
# ERROR - duty = x0000 -- should be =x001e
# ERROR - duty = x0000 -- should be =x3ea8
# ERROR - duty = x0000 -- should be =x176e
# ERROR - duty = x0000 -- should be =x3f77
# ERROR - duty = x0000 -- should be =x0c3c
# ERROR - duty = x0000 -- should be =x3e77
# ERROR - duty = x0000 -- should be =x0441
# ERROR - duty = x0000 -- should be =x3f6d
# ERROR - duty = x0000 -- should be =x3146
# ERROR - duty = x0000 -- should be =x200b
# ERROR - duty = x0000 -- should be =x3db6
# ERROR - duty = x0000 -- should be =x0c4a
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# wrote correct data to eeprom
# ERROR - incorrect address
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode
# Ending command operation tests...
# reseting...
# Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 408
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
restart
# Loading work.cbc_dig_tb
run -all
# Initializing...
# Finishing Initialization...
# Basic test running...
# Break key hit 
# Break in Module control at /filespace/people/v/vennard/551projectCBC/Combined/control.v line 149
# Compile of cbc_dig_tb.v was successful.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
# Break key hit 
run -all
# Initializing...
# Basic test running...
#          0 duty written correctly
# Compile of cbc_dig_tb.v was successful with warnings.
# Compile of cbc_dig_tb.v was successful with warnings.
restart
# Refreshing /filespace/people/v/vennard/551projectCBC/Combined/work.cbc_dig_tb
# Loading work.cbc_dig_tb
run -all
# Initializing...
# Basic test running...
#          0 duty written correctly
#          1 duty written correctly
# ERROR - duty = x0000 -- should be =x3fcd
# ERROR - duty = x0000 -- should be =x3f5d
# ERROR - duty = x0000 -- should be =x3df0
# ERROR - duty = x0000 -- should be =x0017
# ERROR - duty = x0000 -- should be =x044d
# ERROR - duty = x0000 -- should be =x3111
# ERROR - duty = x0000 -- should be =x3f45
# ERROR - duty = x0000 -- should be =x001e
# ERROR - duty = x0000 -- should be =x3ea8
# ERROR - duty = x0000 -- should be =x176e
# ERROR - duty = x0000 -- should be =x3f77
# ERROR - duty = x0000 -- should be =x0c3c
# ERROR - duty = x0000 -- should be =x3e77
# ERROR - duty = x0000 -- should be =x0441
# ERROR - duty = x0000 -- should be =x3f6d
# ERROR - duty = x0000 -- should be =x3146
# ERROR - duty = x0000 -- should be =x200b
# ERROR - duty = x0000 -- should be =x3db6
# Finishing Basic Test...
# Starting Xset testing
# Sending new xset value...
# Checking xset response...
# correct resp (x0024) matches xset (x0024)
# Sending new xset value...
# Checking xset response...
# correct resp (x0003) matches xset (x0003)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Sending new xset value...
# Checking xset response...
# correct resp (x0069) matches xset (x0069)
# Sending new xset value...
# Checking xset response...
# correct resp (x3f22) matches xset (x3f22)
# Sending new xset value...
# Checking xset response...
# correct resp (x0567) matches xset (x0567)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff1) matches xset (x3ff1)
# Sending new xset value...
# Checking xset response...
# correct resp (x0045) matches xset (x0045)
# Sending new xset value...
# Checking xset response...
# correct resp (x0365) matches xset (x0365)
# Sending new xset value...
# Checking xset response...
# correct resp (x3ff2) matches xset (x3ff2)
# Finishing Xset test...
# starting command mode tests
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# detected invalid command correctly
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode
# Sending new command...
# correctly read data from eeprom addr 0
# correct response (x0066) = (x0066)
# Sending new command...
# wrote correct data to eeprom
# ERROR - incorrect address
# Correct - sent out positive acknowledge
# Sending new command...
# Correct - sent out positive acknowledge
# entered command mode
# Ending command operation tests...
# reseting...
# Finishing advanced test
# Break in Module cbc_dig_tb at /filespace/people/v/vennard/551projectCBC/Combined/cbc_dig_tb.v line 416
